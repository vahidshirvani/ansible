# playbook
---
- name: playbook
  hosts: all
  become: true
  tasks:

    - name: Mount external disk
      mount:
        path: /home/ubuntu/.containers/shared/source
        state: present
        fstype: ext4
        src: LABEL=HDD1

    - name: Update and upgrade apt packages
      apt:
        upgrade: dist
        update_cache: yes
        cache_valid_time: 86400

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - htop
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Create "docker" group
      group:
        name: docker
        state: present

    - name: Add "ubuntu" user to "docker" group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull wg-easy docker image
      community.docker.docker_image:
        name: ghcr.io/wg-easy/wg-easy
        source: pull

    - name: Create wg-easy container
      community.docker.docker_container:
        name: wg-easy
        image: ghcr.io/wg-easy/wg-easy
        cpus: 4
        memory: 2G
        capabilities:
          - NET_ADMIN
          - SYS_MODULE
        sysctls:
          net.ipv4.conf.all.src_valid_mark: 1
          net.ipv4.ip_forward: 1
        env:
          WG_HOST: my-server.com
          PASSWORD: PASSWORD
        volumes:
          - /home/ubuntu/.containers/wg-easy/etc/wireguard:/etc/wireguard
        ports:
          - 51820:51820/udp
          - 51821:51821
        restart_policy: unless-stopped
        state: started

    - name: Pull qbittorrent docker image
      community.docker.docker_image:
        name: linuxserver/qbittorrent
        source: pull

    - name: Create qbittorrent container
      community.docker.docker_container:
        name: qbittorrent
        image: linuxserver/qbittorrent
        cpus: 4
        memory: 2G
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: Etc/UTC
          WEBUI_PORT: "8080"
        volumes:
          - /home/ubuntu/.containers/qbittorrent/config:/config
          - /home/ubuntu/.containers/shared/source:/source
        ports:
          - 8080:8080
          - 56881:56881
          - 56881:56881/udp
        restart_policy: unless-stopped
        state: started

    - name: Pull rar2fs docker image
      community.docker.docker_image:
        name: zimme/rar2fs
        source: pull

    - name: Create rar2fs container
      community.docker.docker_container:
        name: rar2fs
        image: zimme/rar2fs
        cpus: 4
        memory: 2G
        capabilities:
          - MKNOD
          - SYS_ADMIN
        devices:
          - /dev/fuse
        network_mode: none
        init: true
        security_opts:
          - apparmor:unconfined
        volumes:
          - /home/ubuntu/.containers/shared/source:/source
          - /home/ubuntu/.containers/shared/destination:/destination:rshared
        restart_policy: unless-stopped
        state: started

    - name: Pull plex docker image
      community.docker.docker_image:
        name: linuxserver/plex
        source: pull

    - name: Create plex container
      community.docker.docker_container:
        name: plex
        image: linuxserver/plex
        cpus: 4
        memory: 2G
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: Etc/UTC
          VERSION: docker
          PLEX_CLAIM: claim-token-expired
        volumes:
          - /home/ubuntu/.containers/plex/config:/config
          - /home/ubuntu/.containers/shared/destination:/destination
        ports:
          - 32400:32400
        restart_policy: unless-stopped
        state: started
